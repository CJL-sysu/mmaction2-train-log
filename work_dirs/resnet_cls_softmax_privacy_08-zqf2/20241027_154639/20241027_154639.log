2024/10/27 15:46:39 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 3407
    GPU 0: NVIDIA GeForce RTX 4060 Ti
    CUDA_HOME: /usr/local/cuda-11.8
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.4.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2023.1-Product Build 20230303 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.4.2 (Git Hash 1137e04ec0b5251ca2b4400a4fd3c667ce843d67)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90;-gencode;arch=compute_37,code=compute_37
  - CuDNN 90.1
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=9.1.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.4.1, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.19.1
    OpenCV: 4.10.0
    MMEngine: 0.10.5

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 3407
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/10/27 15:46:39 - mmengine - INFO - Config:
ann_file_train = '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/trainAction.txt'
ann_file_val = '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/valAction.txt'
auto_scale_lr = dict(base_batch_size=256, enable=False)
data_root = '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/data'
data_root_val = '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/data'
dataset_type = 'RawframeDataset'
default_hooks = dict(
    checkpoint=dict(
        interval=3, max_keep_ckpts=1, save_best='auto', type='CheckpointHook'),
    logger=dict(ignore_last=False, interval=100, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    runtime_info=dict(type='RuntimeInfoHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    sync_buffers=dict(type='SyncBuffersHook'),
    timer=dict(type='IterTimerHook'))
default_scope = 'mmaction'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
file_client_args = dict(io_backend='disk')
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(custom_cfg=[
    dict(
        data_src='top1_acc',
        log_name='top1_acc_avg',
        method_name='mean',
        window_size='global'),
])
model = dict(
    backbone=dict(
        depth=50,
        norm_eval=False,
        pretrained='https://download.pytorch.org/models/resnet50-11ad3fa6.pth',
        type='ResNet'),
    cls_head=dict(
        average_clips='score',
        in_channels=2048,
        init_std=0.01,
        num_classes=13,
        type='SoftmaxHead'),
    data_preprocessor=dict(
        format_shape='NCHW',
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='ActionDataPreprocessor'),
    test_cfg=None,
    train_cfg=None,
    type='Recognizer2D')
optim_wrapper = dict(
    clip_grad=dict(max_norm=40, norm_type=2),
    loss_scale='dynamic',
    optimizer=dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0001),
    type='AmpOptimWrapper')
param_scheduler = [
    dict(
        T_max=50,
        begin=0,
        by_epoch=True,
        end=50,
        eta_min=0,
        type='CosineAnnealingLR'),
]
randomness = dict(seed=3407)
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file=
        '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/valAction.txt',
        data_prefix=dict(
            img=
            '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/data'
        ),
        filename_tmpl='{:06}.png',
        pipeline=[
            dict(
                clip_len=1,
                frame_interval=1,
                num_clips=25,
                test_mode=True,
                type='SampleFrames'),
            dict(io_backend='disk', type='RawFrameDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='TenCrop'),
            dict(input_format='NCHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='RawframeDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(type='AccMetric')
test_pipeline = [
    dict(
        clip_len=1,
        frame_interval=1,
        num_clips=25,
        test_mode=True,
        type='SampleFrames'),
    dict(io_backend='disk', type='RawFrameDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='TenCrop'),
    dict(input_format='NCHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
train_cfg = dict(
    max_epochs=50, type='EpochBasedTrainLoop', val_begin=1, val_interval=1)
train_dataloader = dict(
    batch_size=16,
    dataset=dict(
        ann_file=
        '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/trainAction.txt',
        data_prefix=dict(
            img=
            '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/data'
        ),
        filename_tmpl='{:06}.png',
        pipeline=[
            dict(
                clip_len=1, frame_interval=1, num_clips=6,
                type='SampleFrames'),
            dict(io_backend='disk', type='RawFrameDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(
                input_size=224,
                max_wh_scale_gap=1,
                random_crop=False,
                scales=(
                    1,
                    0.875,
                    0.75,
                    0.5,
                ),
                type='MultiScaleCrop'),
            dict(keep_ratio=False, scale=(
                224,
                224,
            ), type='Resize'),
            dict(input_format='NCHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        type='RawframeDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(clip_len=1, frame_interval=1, num_clips=6, type='SampleFrames'),
    dict(io_backend='disk', type='RawFrameDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(
        input_size=224,
        max_wh_scale_gap=1,
        random_crop=False,
        scales=(
            1,
            0.875,
            0.75,
            0.5,
        ),
        type='MultiScaleCrop'),
    dict(keep_ratio=False, scale=(
        224,
        224,
    ), type='Resize'),
    dict(input_format='NCHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=16,
    dataset=dict(
        ann_file=
        '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/valAction.txt',
        data_prefix=dict(
            img=
            '/home/node1/Desktop/code/ai/data/sbu/nc_plus_08size_3c_filter/data'
        ),
        filename_tmpl='{:06}.png',
        pipeline=[
            dict(
                clip_len=1,
                frame_interval=1,
                num_clips=6,
                test_mode=True,
                type='SampleFrames'),
            dict(io_backend='disk', type='RawFrameDecode'),
            dict(scale=(
                -1,
                256,
            ), type='Resize'),
            dict(crop_size=224, type='CenterCrop'),
            dict(input_format='NCHW', type='FormatShape'),
            dict(type='PackActionInputs'),
        ],
        test_mode=True,
        type='RawframeDataset'),
    num_workers=8,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(type='AccMetric')
val_pipeline = [
    dict(
        clip_len=1,
        frame_interval=1,
        num_clips=6,
        test_mode=True,
        type='SampleFrames'),
    dict(io_backend='disk', type='RawFrameDecode'),
    dict(scale=(
        -1,
        256,
    ), type='Resize'),
    dict(crop_size=224, type='CenterCrop'),
    dict(input_format='NCHW', type='FormatShape'),
    dict(type='PackActionInputs'),
]
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    type='ActionVisualizer', vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = '/home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2'

2024/10/27 15:46:40 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/10/27 15:46:40 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SyncBuffersHook                    
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/10/27 15:46:41 - mmengine - INFO - These parameters in pretrained checkpoint are not loaded: {'fc.bias', 'fc.weight'}
Name of parameter - Initialization information

backbone.conv1.conv.weight - torch.Size([64, 3, 7, 7]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.conv1.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.conv1.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv1.conv.weight - torch.Size([64, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv1.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv1.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv2.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv2.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv2.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv3.conv.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.conv3.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.downsample.conv.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.downsample.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.0.downsample.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv1.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv1.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv2.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv2.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv2.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv3.conv.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.1.conv3.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv1.conv.weight - torch.Size([64, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv1.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv1.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv2.conv.weight - torch.Size([64, 64, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv2.bn.weight - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv2.bn.bias - torch.Size([64]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv3.conv.weight - torch.Size([256, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv3.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer1.2.conv3.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv1.conv.weight - torch.Size([128, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv1.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv1.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv2.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv2.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv2.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv3.conv.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.conv3.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.downsample.conv.weight - torch.Size([512, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.downsample.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.0.downsample.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv1.conv.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv1.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv1.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv2.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv2.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv2.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv3.conv.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.1.conv3.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv1.conv.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv1.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv1.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv2.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv2.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv2.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv3.conv.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.2.conv3.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv1.conv.weight - torch.Size([128, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv1.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv1.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv2.conv.weight - torch.Size([128, 128, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv2.bn.weight - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv2.bn.bias - torch.Size([128]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv3.conv.weight - torch.Size([512, 128, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv3.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer2.3.conv3.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv1.conv.weight - torch.Size([256, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.downsample.conv.weight - torch.Size([1024, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.downsample.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.0.downsample.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.1.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.2.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.3.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.4.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv1.conv.weight - torch.Size([256, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv1.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv1.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv2.conv.weight - torch.Size([256, 256, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv2.bn.weight - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv2.bn.bias - torch.Size([256]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv3.conv.weight - torch.Size([1024, 256, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv3.bn.weight - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer3.5.conv3.bn.bias - torch.Size([1024]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv1.conv.weight - torch.Size([512, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv1.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv1.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv2.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv2.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv2.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv3.conv.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.conv3.bn.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.downsample.conv.weight - torch.Size([2048, 1024, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.downsample.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.0.downsample.bn.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv1.conv.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv1.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv1.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv2.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv2.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv2.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv3.conv.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.1.conv3.bn.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv1.conv.weight - torch.Size([512, 2048, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv1.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv1.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv2.conv.weight - torch.Size([512, 512, 3, 3]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv2.bn.weight - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv2.bn.bias - torch.Size([512]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv3.conv.weight - torch.Size([2048, 512, 1, 1]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv3.bn.weight - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

backbone.layer4.2.conv3.bn.bias - torch.Size([2048]): 
Initialized by user-defined `init_weights` in ResNet  

cls_head.fc_cls.weight - torch.Size([13, 2048]): 
Initialized by user-defined `init_weights` in SoftmaxHead  

cls_head.fc_cls.bias - torch.Size([13]): 
Initialized by user-defined `init_weights` in SoftmaxHead  
2024/10/27 15:46:41 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/10/27 15:46:41 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/10/27 15:46:41 - mmengine - INFO - Checkpoints will be saved to /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2.
2024/10/27 15:46:44 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:46:44 - mmengine - INFO - Epoch(train)  [1][15/15]  lr: 1.0000e-02  eta: 0:02:43  time: 0.1912  data_time: 0.0049  memory: 4366  grad_norm: 3.6421  loss: 2.2072  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 2.2072  top1_acc_avg: 0.1458
2024/10/27 15:46:45 - mmengine - INFO - Epoch(val) [1][4/4]    acc/top1: 0.1053  acc/top5: 0.7018  acc/mean1: 0.1250  data_time: 0.0481  time: 0.1858
2024/10/27 15:46:45 - mmengine - INFO - The best checkpoint with 0.1053 acc/top1 at 1 epoch is saved to best_acc_top1_epoch_1.pth.
2024/10/27 15:46:48 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:46:48 - mmengine - INFO - Epoch(train)  [2][15/15]  lr: 9.9901e-03  eta: 0:02:30  time: 0.1843  data_time: 0.0038  memory: 4366  grad_norm: 4.2631  loss: 2.1742  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 2.1742  top1_acc_avg: 0.1562
2024/10/27 15:46:49 - mmengine - INFO - Epoch(val) [2][4/4]    acc/top1: 0.1754  acc/top5: 0.8070  acc/mean1: 0.1250  data_time: 0.0137  time: 0.1374
2024/10/27 15:46:49 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_1.pth is removed
2024/10/27 15:46:49 - mmengine - INFO - The best checkpoint with 0.1754 acc/top1 at 2 epoch is saved to best_acc_top1_epoch_2.pth.
2024/10/27 15:46:52 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:46:52 - mmengine - INFO - Epoch(train)  [3][15/15]  lr: 9.9606e-03  eta: 0:02:24  time: 0.1842  data_time: 0.0036  memory: 4366  grad_norm: 3.4903  loss: 2.1157  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 2.1157  top1_acc_avg: 0.1458
2024/10/27 15:46:52 - mmengine - INFO - Saving checkpoint at 3 epochs
2024/10/27 15:46:53 - mmengine - INFO - Epoch(val) [3][4/4]    acc/top1: 0.1053  acc/top5: 0.7193  acc/mean1: 0.1250  data_time: 0.0126  time: 0.1360
2024/10/27 15:46:56 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:46:56 - mmengine - INFO - Epoch(train)  [4][15/15]  lr: 9.9114e-03  eta: 0:02:19  time: 0.1840  data_time: 0.0036  memory: 4366  grad_norm: 3.2630  loss: 2.0124  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 2.0124  top1_acc_avg: 0.1521
2024/10/27 15:46:56 - mmengine - INFO - Epoch(val) [4][4/4]    acc/top1: 0.1404  acc/top5: 0.7018  acc/mean1: 0.1181  data_time: 0.0131  time: 0.1364
2024/10/27 15:46:59 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:46:59 - mmengine - INFO - Epoch(train)  [5][15/15]  lr: 9.8429e-03  eta: 0:02:15  time: 0.1840  data_time: 0.0036  memory: 4366  grad_norm: 4.2185  loss: 1.8773  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.8773  top1_acc_avg: 0.1625
2024/10/27 15:47:00 - mmengine - INFO - Epoch(val) [5][4/4]    acc/top1: 0.1053  acc/top5: 0.5965  acc/mean1: 0.1250  data_time: 0.0132  time: 0.1368
2024/10/27 15:47:03 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:03 - mmengine - INFO - Epoch(train)  [6][15/15]  lr: 9.7553e-03  eta: 0:02:12  time: 0.1844  data_time: 0.0038  memory: 4366  grad_norm: 5.0368  loss: 1.6831  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 1.6831  top1_acc_avg: 0.1931
2024/10/27 15:47:03 - mmengine - INFO - Saving checkpoint at 6 epochs
2024/10/27 15:47:04 - mmengine - INFO - Epoch(val) [6][4/4]    acc/top1: 0.1053  acc/top5: 0.5614  acc/mean1: 0.1250  data_time: 0.0127  time: 0.1359
2024/10/27 15:47:07 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:07 - mmengine - INFO - Epoch(train)  [7][15/15]  lr: 9.6489e-03  eta: 0:02:08  time: 0.1846  data_time: 0.0036  memory: 4366  grad_norm: 5.6576  loss: 1.4027  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.4027  top1_acc_avg: 0.2250
2024/10/27 15:47:07 - mmengine - INFO - Epoch(val) [7][4/4]    acc/top1: 0.4912  acc/top5: 0.9474  acc/mean1: 0.5028  data_time: 0.0126  time: 0.1359
2024/10/27 15:47:07 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_2.pth is removed
2024/10/27 15:47:08 - mmengine - INFO - The best checkpoint with 0.4912 acc/top1 at 7 epoch is saved to best_acc_top1_epoch_7.pth.
2024/10/27 15:47:11 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:11 - mmengine - INFO - Epoch(train)  [8][15/15]  lr: 9.5241e-03  eta: 0:02:05  time: 0.1841  data_time: 0.0036  memory: 4366  grad_norm: 7.7578  loss: 1.5712  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 1.5712  top1_acc_avg: 0.2500
2024/10/27 15:47:12 - mmengine - INFO - Epoch(val) [8][4/4]    acc/top1: 0.1930  acc/top5: 0.9474  acc/mean1: 0.2028  data_time: 0.0132  time: 0.1369
2024/10/27 15:47:15 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:15 - mmengine - INFO - Epoch(train)  [9][15/15]  lr: 9.3815e-03  eta: 0:02:02  time: 0.1840  data_time: 0.0036  memory: 4366  grad_norm: 6.4069  loss: 1.3706  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.3706  top1_acc_avg: 0.2704
2024/10/27 15:47:15 - mmengine - INFO - Saving checkpoint at 9 epochs
2024/10/27 15:47:16 - mmengine - INFO - Epoch(val) [9][4/4]    acc/top1: 0.2105  acc/top5: 0.6842  acc/mean1: 0.2500  data_time: 0.0128  time: 0.1361
2024/10/27 15:47:19 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:19 - mmengine - INFO - Epoch(train) [10][15/15]  lr: 9.2216e-03  eta: 0:01:59  time: 0.1847  data_time: 0.0042  memory: 4366  grad_norm: 7.3892  loss: 1.3033  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 1.3033  top1_acc_avg: 0.2967
2024/10/27 15:47:19 - mmengine - INFO - Epoch(val) [10][4/4]    acc/top1: 0.4561  acc/top5: 0.9474  acc/mean1: 0.3694  data_time: 0.0127  time: 0.1360
2024/10/27 15:47:22 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:22 - mmengine - INFO - Epoch(train) [11][15/15]  lr: 9.0451e-03  eta: 0:01:56  time: 0.1848  data_time: 0.0041  memory: 4366  grad_norm: 6.9669  loss: 1.1901  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.1901  top1_acc_avg: 0.3117
2024/10/27 15:47:23 - mmengine - INFO - Epoch(val) [11][4/4]    acc/top1: 0.4035  acc/top5: 0.9298  acc/mean1: 0.5014  data_time: 0.0134  time: 0.1371
2024/10/27 15:47:26 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:26 - mmengine - INFO - Epoch(train) [12][15/15]  lr: 8.8526e-03  eta: 0:01:52  time: 0.1842  data_time: 0.0036  memory: 4366  grad_norm: 7.1312  loss: 1.2257  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.2257  top1_acc_avg: 0.3288
2024/10/27 15:47:26 - mmengine - INFO - Saving checkpoint at 12 epochs
2024/10/27 15:47:27 - mmengine - INFO - Epoch(val) [12][4/4]    acc/top1: 0.6491  acc/top5: 0.9825  acc/mean1: 0.5889  data_time: 0.0127  time: 0.1361
2024/10/27 15:47:27 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_7.pth is removed
2024/10/27 15:47:27 - mmengine - INFO - The best checkpoint with 0.6491 acc/top1 at 12 epoch is saved to best_acc_top1_epoch_12.pth.
2024/10/27 15:47:30 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:30 - mmengine - INFO - Epoch(train) [13][15/15]  lr: 8.6448e-03  eta: 0:01:49  time: 0.1845  data_time: 0.0040  memory: 4366  grad_norm: 6.1919  loss: 0.9994  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.9994  top1_acc_avg: 0.3529
2024/10/27 15:47:31 - mmengine - INFO - Epoch(val) [13][4/4]    acc/top1: 0.5439  acc/top5: 0.9825  acc/mean1: 0.4722  data_time: 0.0125  time: 0.1358
2024/10/27 15:47:34 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:34 - mmengine - INFO - Epoch(train) [14][15/15]  lr: 8.4227e-03  eta: 0:01:46  time: 0.1841  data_time: 0.0035  memory: 4366  grad_norm: 7.1226  loss: 1.1438  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.1438  top1_acc_avg: 0.3631
2024/10/27 15:47:35 - mmengine - INFO - Epoch(val) [14][4/4]    acc/top1: 0.3684  acc/top5: 1.0000  acc/mean1: 0.4236  data_time: 0.0128  time: 0.1363
2024/10/27 15:47:38 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:38 - mmengine - INFO - Epoch(train) [15][15/15]  lr: 8.1871e-03  eta: 0:01:43  time: 0.1846  data_time: 0.0039  memory: 4366  grad_norm: 6.0494  loss: 1.0339  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 1.0339  top1_acc_avg: 0.3764
2024/10/27 15:47:38 - mmengine - INFO - Saving checkpoint at 15 epochs
2024/10/27 15:47:39 - mmengine - INFO - Epoch(val) [15][4/4]    acc/top1: 0.6667  acc/top5: 0.9474  acc/mean1: 0.6861  data_time: 0.0128  time: 0.1362
2024/10/27 15:47:39 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_12.pth is removed
2024/10/27 15:47:39 - mmengine - INFO - The best checkpoint with 0.6667 acc/top1 at 15 epoch is saved to best_acc_top1_epoch_15.pth.
2024/10/27 15:47:42 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:42 - mmengine - INFO - Epoch(train) [16][15/15]  lr: 7.9389e-03  eta: 0:01:40  time: 0.1849  data_time: 0.0042  memory: 4366  grad_norm: 6.0316  loss: 0.8344  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.8344  top1_acc_avg: 0.3953
2024/10/27 15:47:43 - mmengine - INFO - Epoch(val) [16][4/4]    acc/top1: 0.5088  acc/top5: 1.0000  acc/mean1: 0.4847  data_time: 0.0126  time: 0.1359
2024/10/27 15:47:46 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:46 - mmengine - INFO - Epoch(train) [17][15/15]  lr: 7.6791e-03  eta: 0:01:37  time: 0.1845  data_time: 0.0037  memory: 4366  grad_norm: 6.6175  loss: 0.9030  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.9030  top1_acc_avg: 0.4074
2024/10/27 15:47:46 - mmengine - INFO - Epoch(val) [17][4/4]    acc/top1: 0.6316  acc/top5: 0.9825  acc/mean1: 0.6764  data_time: 0.0129  time: 0.1363
2024/10/27 15:47:49 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:49 - mmengine - INFO - Epoch(train) [18][15/15]  lr: 7.4088e-03  eta: 0:01:34  time: 0.1843  data_time: 0.0038  memory: 4366  grad_norm: 6.8190  loss: 0.9953  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.9953  top1_acc_avg: 0.4222
2024/10/27 15:47:49 - mmengine - INFO - Saving checkpoint at 18 epochs
2024/10/27 15:47:50 - mmengine - INFO - Epoch(val) [18][4/4]    acc/top1: 0.4561  acc/top5: 0.9474  acc/mean1: 0.4931  data_time: 0.0133  time: 0.1367
2024/10/27 15:47:53 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:53 - mmengine - INFO - Epoch(train) [19][15/15]  lr: 7.1289e-03  eta: 0:01:31  time: 0.1843  data_time: 0.0036  memory: 4366  grad_norm: 7.2265  loss: 0.9959  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.9959  top1_acc_avg: 0.4327
2024/10/27 15:47:54 - mmengine - INFO - Epoch(val) [19][4/4]    acc/top1: 0.5789  acc/top5: 1.0000  acc/mean1: 0.6250  data_time: 0.0153  time: 0.1387
2024/10/27 15:47:57 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:47:57 - mmengine - INFO - Epoch(train) [20][15/15]  lr: 6.8406e-03  eta: 0:01:28  time: 0.1849  data_time: 0.0041  memory: 4366  grad_norm: 6.1152  loss: 0.7646  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.7646  top1_acc_avg: 0.4442
2024/10/27 15:47:57 - mmengine - INFO - Epoch(val) [20][4/4]    acc/top1: 0.5789  acc/top5: 1.0000  acc/mean1: 0.6083  data_time: 0.0124  time: 0.1359
2024/10/27 15:48:00 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:00 - mmengine - INFO - Epoch(train) [21][15/15]  lr: 6.5451e-03  eta: 0:01:25  time: 0.1847  data_time: 0.0042  memory: 4366  grad_norm: 6.0537  loss: 0.7963  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.7963  top1_acc_avg: 0.4605
2024/10/27 15:48:00 - mmengine - INFO - Saving checkpoint at 21 epochs
2024/10/27 15:48:01 - mmengine - INFO - Epoch(val) [21][4/4]    acc/top1: 0.7193  acc/top5: 1.0000  acc/mean1: 0.7708  data_time: 0.0130  time: 0.1364
2024/10/27 15:48:01 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_15.pth is removed
2024/10/27 15:48:02 - mmengine - INFO - The best checkpoint with 0.7193 acc/top1 at 21 epoch is saved to best_acc_top1_epoch_21.pth.
2024/10/27 15:48:05 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:05 - mmengine - INFO - Epoch(train) [22][15/15]  lr: 6.2434e-03  eta: 0:01:22  time: 0.1843  data_time: 0.0035  memory: 4366  grad_norm: 5.9607  loss: 0.7570  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.7570  top1_acc_avg: 0.4716
2024/10/27 15:48:06 - mmengine - INFO - Epoch(val) [22][4/4]    acc/top1: 0.7544  acc/top5: 1.0000  acc/mean1: 0.7875  data_time: 0.0126  time: 0.1360
2024/10/27 15:48:06 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_21.pth is removed
2024/10/27 15:48:06 - mmengine - INFO - The best checkpoint with 0.7544 acc/top1 at 22 epoch is saved to best_acc_top1_epoch_22.pth.
2024/10/27 15:48:09 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:09 - mmengine - INFO - Epoch(train) [23][15/15]  lr: 5.9369e-03  eta: 0:01:19  time: 0.1852  data_time: 0.0044  memory: 4366  grad_norm: 7.5624  loss: 1.0353  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 1.0353  top1_acc_avg: 0.4788
2024/10/27 15:48:10 - mmengine - INFO - Epoch(val) [23][4/4]    acc/top1: 0.7368  acc/top5: 0.9825  acc/mean1: 0.7208  data_time: 0.0126  time: 0.1360
2024/10/27 15:48:13 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:13 - mmengine - INFO - Epoch(train) [24][15/15]  lr: 5.6267e-03  eta: 0:01:16  time: 0.1843  data_time: 0.0036  memory: 4366  grad_norm: 6.2659  loss: 0.8921  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.8921  top1_acc_avg: 0.4858
2024/10/27 15:48:13 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/10/27 15:48:14 - mmengine - INFO - Epoch(val) [24][4/4]    acc/top1: 0.7193  acc/top5: 0.9825  acc/mean1: 0.7708  data_time: 0.0128  time: 0.1364
2024/10/27 15:48:17 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:17 - mmengine - INFO - Epoch(train) [25][15/15]  lr: 5.3140e-03  eta: 0:01:13  time: 0.1843  data_time: 0.0035  memory: 4366  grad_norm: 5.1366  loss: 0.6289  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.6289  top1_acc_avg: 0.4950
2024/10/27 15:48:17 - mmengine - INFO - Epoch(val) [25][4/4]    acc/top1: 0.7368  acc/top5: 0.9825  acc/mean1: 0.7542  data_time: 0.0127  time: 0.1362
2024/10/27 15:48:20 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:20 - mmengine - INFO - Epoch(train) [26][15/15]  lr: 5.0000e-03  eta: 0:01:10  time: 0.1852  data_time: 0.0045  memory: 4366  grad_norm: 5.4340  loss: 0.6615  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.6615  top1_acc_avg: 0.5022
2024/10/27 15:48:21 - mmengine - INFO - Epoch(val) [26][4/4]    acc/top1: 0.6842  acc/top5: 1.0000  acc/mean1: 0.6833  data_time: 0.0137  time: 0.1375
2024/10/27 15:48:24 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:24 - mmengine - INFO - Epoch(train) [27][15/15]  lr: 4.6860e-03  eta: 0:01:07  time: 0.1847  data_time: 0.0039  memory: 4366  grad_norm: 6.1228  loss: 0.6922  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.6922  top1_acc_avg: 0.5103
2024/10/27 15:48:24 - mmengine - INFO - Saving checkpoint at 27 epochs
2024/10/27 15:48:25 - mmengine - INFO - Epoch(val) [27][4/4]    acc/top1: 0.7895  acc/top5: 0.9825  acc/mean1: 0.7833  data_time: 0.0127  time: 0.1362
2024/10/27 15:48:25 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_22.pth is removed
2024/10/27 15:48:25 - mmengine - INFO - The best checkpoint with 0.7895 acc/top1 at 27 epoch is saved to best_acc_top1_epoch_27.pth.
2024/10/27 15:48:29 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:29 - mmengine - INFO - Epoch(train) [28][15/15]  lr: 4.3733e-03  eta: 0:01:05  time: 0.1843  data_time: 0.0036  memory: 4366  grad_norm: 4.8722  loss: 0.4872  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.4872  top1_acc_avg: 0.5222
2024/10/27 15:48:29 - mmengine - INFO - Epoch(val) [28][4/4]    acc/top1: 0.7193  acc/top5: 0.9825  acc/mean1: 0.7375  data_time: 0.0126  time: 0.1361
2024/10/27 15:48:32 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:32 - mmengine - INFO - Epoch(train) [29][15/15]  lr: 4.0631e-03  eta: 0:01:02  time: 0.1843  data_time: 0.0037  memory: 4366  grad_norm: 5.3566  loss: 0.5055  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5055  top1_acc_avg: 0.5333
2024/10/27 15:48:33 - mmengine - INFO - Epoch(val) [29][4/4]    acc/top1: 0.7895  acc/top5: 1.0000  acc/mean1: 0.8069  data_time: 0.0126  time: 0.1361
2024/10/27 15:48:36 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:36 - mmengine - INFO - Epoch(train) [30][15/15]  lr: 3.7566e-03  eta: 0:00:59  time: 0.1844  data_time: 0.0037  memory: 4366  grad_norm: 5.8157  loss: 0.5702  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5702  top1_acc_avg: 0.5419
2024/10/27 15:48:36 - mmengine - INFO - Saving checkpoint at 30 epochs
2024/10/27 15:48:37 - mmengine - INFO - Epoch(val) [30][4/4]    acc/top1: 0.7719  acc/top5: 0.9825  acc/mean1: 0.7833  data_time: 0.0126  time: 0.1362
2024/10/27 15:48:40 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:40 - mmengine - INFO - Epoch(train) [31][15/15]  lr: 3.4549e-03  eta: 0:00:56  time: 0.1844  data_time: 0.0037  memory: 4366  grad_norm: 5.9586  loss: 0.6053  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.6053  top1_acc_avg: 0.5497
2024/10/27 15:48:40 - mmengine - INFO - Epoch(val) [31][4/4]    acc/top1: 0.7895  acc/top5: 0.9825  acc/mean1: 0.8097  data_time: 0.0127  time: 0.1361
2024/10/27 15:48:43 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:43 - mmengine - INFO - Epoch(train) [32][15/15]  lr: 3.1594e-03  eta: 0:00:53  time: 0.1845  data_time: 0.0037  memory: 4366  grad_norm: 5.6855  loss: 0.5442  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 0.5442  top1_acc_avg: 0.5578
2024/10/27 15:48:44 - mmengine - INFO - Epoch(val) [32][4/4]    acc/top1: 0.7895  acc/top5: 0.9825  acc/mean1: 0.8014  data_time: 0.0125  time: 0.1360
2024/10/27 15:48:47 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:47 - mmengine - INFO - Epoch(train) [33][15/15]  lr: 2.8711e-03  eta: 0:00:50  time: 0.1843  data_time: 0.0036  memory: 4366  grad_norm: 7.4487  loss: 0.6836  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.6836  top1_acc_avg: 0.5635
2024/10/27 15:48:47 - mmengine - INFO - Saving checkpoint at 33 epochs
2024/10/27 15:48:48 - mmengine - INFO - Epoch(val) [33][4/4]    acc/top1: 0.8070  acc/top5: 0.9825  acc/mean1: 0.8250  data_time: 0.0128  time: 0.1364
2024/10/27 15:48:48 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_27.pth is removed
2024/10/27 15:48:48 - mmengine - INFO - The best checkpoint with 0.8070 acc/top1 at 33 epoch is saved to best_acc_top1_epoch_33.pth.
2024/10/27 15:48:52 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:52 - mmengine - INFO - Epoch(train) [34][15/15]  lr: 2.5912e-03  eta: 0:00:47  time: 0.1856  data_time: 0.0041  memory: 4366  grad_norm: 4.6159  loss: 0.4301  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.4301  top1_acc_avg: 0.5724
2024/10/27 15:48:52 - mmengine - INFO - Epoch(val) [34][4/4]    acc/top1: 0.7895  acc/top5: 0.9825  acc/mean1: 0.7597  data_time: 0.0130  time: 0.1363
2024/10/27 15:48:55 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:55 - mmengine - INFO - Epoch(train) [35][15/15]  lr: 2.3209e-03  eta: 0:00:44  time: 0.1847  data_time: 0.0040  memory: 4366  grad_norm: 6.2993  loss: 0.5205  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5205  top1_acc_avg: 0.5807
2024/10/27 15:48:56 - mmengine - INFO - Epoch(val) [35][4/4]    acc/top1: 0.8772  acc/top5: 0.9825  acc/mean1: 0.8792  data_time: 0.0124  time: 0.1359
2024/10/27 15:48:56 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_33.pth is removed
2024/10/27 15:48:56 - mmengine - INFO - The best checkpoint with 0.8772 acc/top1 at 35 epoch is saved to best_acc_top1_epoch_35.pth.
2024/10/27 15:48:59 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:48:59 - mmengine - INFO - Epoch(train) [36][15/15]  lr: 2.0611e-03  eta: 0:00:41  time: 0.1846  data_time: 0.0040  memory: 4366  grad_norm: 5.6695  loss: 0.5023  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5023  top1_acc_avg: 0.5885
2024/10/27 15:48:59 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/10/27 15:49:00 - mmengine - INFO - Epoch(val) [36][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8667  data_time: 0.0127  time: 0.1360
2024/10/27 15:49:03 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:03 - mmengine - INFO - Epoch(train) [37][15/15]  lr: 1.8129e-03  eta: 0:00:38  time: 0.1844  data_time: 0.0038  memory: 4366  grad_norm: 7.4654  loss: 0.7460  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.7460  top1_acc_avg: 0.5938
2024/10/27 15:49:04 - mmengine - INFO - Epoch(val) [37][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8667  data_time: 0.0125  time: 0.1360
2024/10/27 15:49:07 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:07 - mmengine - INFO - Epoch(train) [38][15/15]  lr: 1.5773e-03  eta: 0:00:35  time: 0.1848  data_time: 0.0039  memory: 4366  grad_norm: 5.6344  loss: 0.4117  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.4117  top1_acc_avg: 0.5998
2024/10/27 15:49:07 - mmengine - INFO - Epoch(val) [38][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8694  data_time: 0.0126  time: 0.1360
2024/10/27 15:49:10 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:10 - mmengine - INFO - Epoch(train) [39][15/15]  lr: 1.3552e-03  eta: 0:00:32  time: 0.1843  data_time: 0.0037  memory: 4366  grad_norm: 5.2009  loss: 0.4134  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.4134  top1_acc_avg: 0.6072
2024/10/27 15:49:10 - mmengine - INFO - Saving checkpoint at 39 epochs
2024/10/27 15:49:11 - mmengine - INFO - Epoch(val) [39][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8750  data_time: 0.0126  time: 0.1360
2024/10/27 15:49:14 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:14 - mmengine - INFO - Epoch(train) [40][15/15]  lr: 1.1474e-03  eta: 0:00:29  time: 0.1849  data_time: 0.0042  memory: 4366  grad_norm: 5.7957  loss: 0.5688  top1_acc: 0.0000  top5_acc: 0.0000  loss_cls: 0.5688  top1_acc_avg: 0.6125
2024/10/27 15:49:15 - mmengine - INFO - Epoch(val) [40][4/4]    acc/top1: 0.7895  acc/top5: 0.9825  acc/mean1: 0.7667  data_time: 0.0125  time: 0.1361
2024/10/27 15:49:18 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:18 - mmengine - INFO - Epoch(train) [41][15/15]  lr: 9.5492e-04  eta: 0:00:26  time: 0.1848  data_time: 0.0040  memory: 4366  grad_norm: 3.8878  loss: 0.3750  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.3750  top1_acc_avg: 0.6194
2024/10/27 15:49:19 - mmengine - INFO - Epoch(val) [41][4/4]    acc/top1: 0.8070  acc/top5: 0.9825  acc/mean1: 0.7875  data_time: 0.0127  time: 0.1363
2024/10/27 15:49:21 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:21 - mmengine - INFO - Epoch(train) [42][15/15]  lr: 7.7836e-04  eta: 0:00:23  time: 0.1846  data_time: 0.0037  memory: 4366  grad_norm: 4.9281  loss: 0.3346  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.3346  top1_acc_avg: 0.6260
2024/10/27 15:49:21 - mmengine - INFO - Saving checkpoint at 42 epochs
2024/10/27 15:49:22 - mmengine - INFO - Epoch(val) [42][4/4]    acc/top1: 0.8772  acc/top5: 0.9825  acc/mean1: 0.8889  data_time: 0.0129  time: 0.1366
2024/10/27 15:49:25 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:25 - mmengine - INFO - Epoch(train) [43][15/15]  lr: 6.1847e-04  eta: 0:00:20  time: 0.1842  data_time: 0.0036  memory: 4366  grad_norm: 5.9420  loss: 0.5001  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5001  top1_acc_avg: 0.6316
2024/10/27 15:49:26 - mmengine - INFO - Epoch(val) [43][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8667  data_time: 0.0126  time: 0.1362
2024/10/27 15:49:29 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:29 - mmengine - INFO - Epoch(train) [44][15/15]  lr: 4.7586e-04  eta: 0:00:17  time: 0.1845  data_time: 0.0037  memory: 4366  grad_norm: 4.2083  loss: 0.2751  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.2751  top1_acc_avg: 0.6375
2024/10/27 15:49:30 - mmengine - INFO - Epoch(val) [44][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8681  data_time: 0.0128  time: 0.1362
2024/10/27 15:49:32 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:32 - mmengine - INFO - Epoch(train) [45][15/15]  lr: 3.5112e-04  eta: 0:00:14  time: 0.1850  data_time: 0.0042  memory: 4366  grad_norm: 5.3817  loss: 0.3896  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.3896  top1_acc_avg: 0.6431
2024/10/27 15:49:32 - mmengine - INFO - Saving checkpoint at 45 epochs
2024/10/27 15:49:33 - mmengine - INFO - Epoch(val) [45][4/4]    acc/top1: 0.8596  acc/top5: 1.0000  acc/mean1: 0.8681  data_time: 0.0134  time: 0.1370
2024/10/27 15:49:36 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:36 - mmengine - INFO - Epoch(train) [46][15/15]  lr: 2.4472e-04  eta: 0:00:11  time: 0.1845  data_time: 0.0038  memory: 4366  grad_norm: 5.8852  loss: 0.4100  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.4100  top1_acc_avg: 0.6485
2024/10/27 15:49:37 - mmengine - INFO - Epoch(val) [46][4/4]    acc/top1: 0.8421  acc/top5: 0.9825  acc/mean1: 0.8542  data_time: 0.0125  time: 0.1360
2024/10/27 15:49:40 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:40 - mmengine - INFO - Epoch(train) [47][15/15]  lr: 1.5708e-04  eta: 0:00:08  time: 0.1845  data_time: 0.0038  memory: 4366  grad_norm: 4.1424  loss: 0.3440  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.3440  top1_acc_avg: 0.6534
2024/10/27 15:49:41 - mmengine - INFO - Epoch(val) [47][4/4]    acc/top1: 0.8947  acc/top5: 0.9825  acc/mean1: 0.9028  data_time: 0.0131  time: 0.1366
2024/10/27 15:49:41 - mmengine - INFO - The previous best checkpoint /home/node1/Desktop/code/ai/open-mmlab/mmaction2/work_dirs/resnet_cls_softmax_privacy_08-zqf2/best_acc_top1_epoch_35.pth is removed
2024/10/27 15:49:41 - mmengine - INFO - The best checkpoint with 0.8947 acc/top1 at 47 epoch is saved to best_acc_top1_epoch_47.pth.
2024/10/27 15:49:44 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:44 - mmengine - INFO - Epoch(train) [48][15/15]  lr: 8.8564e-05  eta: 0:00:05  time: 0.1838  data_time: 0.0035  memory: 4366  grad_norm: inf  loss: 0.5818  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.5818  top1_acc_avg: 0.6565
2024/10/27 15:49:44 - mmengine - INFO - Saving checkpoint at 48 epochs
2024/10/27 15:49:45 - mmengine - INFO - Epoch(val) [48][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8681  data_time: 0.0129  time: 0.1365
2024/10/27 15:49:48 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:48 - mmengine - INFO - Epoch(train) [49][15/15]  lr: 3.9426e-05  eta: 0:00:02  time: 0.1842  data_time: 0.0035  memory: 4366  grad_norm: 6.5720  loss: 0.5176  top1_acc: 1.0000  top5_acc: 1.0000  loss_cls: 0.5176  top1_acc_avg: 0.6606
2024/10/27 15:49:49 - mmengine - INFO - Epoch(val) [49][4/4]    acc/top1: 0.8421  acc/top5: 0.9825  acc/mean1: 0.8556  data_time: 0.0139  time: 0.1374
2024/10/27 15:49:52 - mmengine - INFO - Exp name: resnet_cls_softmax_privacy_08-zqf2_20241027_154639
2024/10/27 15:49:52 - mmengine - INFO - Epoch(train) [50][15/15]  lr: 9.8664e-06  eta: 0:00:00  time: 0.1851  data_time: 0.0041  memory: 4366  grad_norm: 6.6063  loss: 0.5822  top1_acc: 0.0000  top5_acc: 1.0000  loss_cls: 0.5822  top1_acc_avg: 0.6631
2024/10/27 15:49:52 - mmengine - INFO - Saving checkpoint at 50 epochs
2024/10/27 15:49:53 - mmengine - INFO - Epoch(val) [50][4/4]    acc/top1: 0.8596  acc/top5: 0.9825  acc/mean1: 0.8750  data_time: 0.0144  time: 0.1383
